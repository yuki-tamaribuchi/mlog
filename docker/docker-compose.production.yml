version: '3'

services:
    db:
        image: mysql:5.7
        ports:
            - 33060:3306
        command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
        environment:
            MYSQL_ROOT_PASSWORD: rootpassword
            MYSQL_DATABASE: mlog_db
            MYSQL_USER: mlog_db_user
            MYSQL_PASSWORD: password

    redis:
        image: redis:6.2

            
    nginx:
        image: ${NGINX_IMAGE_URI}:${NGINX_IMAGE_TAG}
        build:
            context: ..
            dockerfile: ./docker/nginx/Dockerfile.production
        ports: 
            - 8000:8000
        depends_on: 
            - app

    celery:
        image: ${PYTHON_IMAGE_URI}:${PYTHON_IMAGE_TAG}
        build: 
            context: ..
            dockerfile: ./docker/python/Dockerfile.production
        env_file: 
            - ./python/app_envfile.env
        environment: 
            - DJANGO_DATABASE=production
            - CELERY_BROKER_DEFAULT=docker
            - CELERY_RESULT_BACKENDS_DEFAULT=docker
        command: bash -c "apt update -y && apt install -y python-celery && cd /usr/src/app && celery -A mlog_project worker >/dev/null"
        depends_on: 
            - redis

    app:
        image: ${PYTHON_IMAGE_URI}:${PYTHON_IMAGE_TAG}
        build: 
            context: ..
            dockerfile: ./docker/python/Dockerfile.production
        env_file: 
            - ./python/app_envfile.env
        command: bash -c "cd /usr/src/app && python manage.py collectstatic --noinput && python manage.py migrate && uwsgi --socket :8001 --module mlog_project.wsgi --py-autoreload 1"
        expose:
            - 8001
        depends_on: 
            - db
            - redis
            - celery