version: '3'

services:
    nginx:
        image: nginx:1.20
        ports: 
            - 8000:8000
        volumes: 
            - ../nginx/conf:/etc/nginx/conf.d
            - ../nginx/uwsgi_params:/etc/nginx/uwsgi_params
        depends_on: 
            - app


    db:
        image: mysql:5.7
        ports: 
            - 33060:3306
        environment:
            MYSQL_ROOT_PASSWORD: rootpassword
            MYSQL_DATABASE: mlog_db
            MYSQL_USER: mlog_db_user
            MYSQL_PASSWORD: password
        command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
        volumes:
            - ../mysql:/var/lib/mysql
            - ../sql:/docker-entrypoint-initdb.d

    redis:
        image: redis:6.2

    celery:
        build: 
            context: ..
            dockerfile: ./docker/python/Dockerfile
        environment: 
            - DJANGO_DATABASE=docker
            - CELERY_BROKER_DEFAULT=docker
            - CELERY_RESULT_BACKENDS_DEFAULT=docker
        env_file: 
            - ./python/app_envfile.env
        volumes: 
            - ../mlog_project:/mlog_project
        command: bash -c "apt update -y && apt install -y python-celery && cd /mlog_project && celery -A mlog_project worker"
        depends_on: 
            - redis

    app:
        build: 
            context: ..
            dockerfile: ./docker/python/Dockerfile
        volumes:
            - ../mlog_project:/mlog_project
        environment: 
            -  DJANGO_DATABASE=docker
            - SELECT2_DEFAULT=select2_docker
            - CELERY_BROKER_DEFAULT=docker
            - CELERY_RESULT_BACKENDS_DEFAULT=docker
        env_file: 
            - /.python/app_envfile.env
        command: bash -c "cd ./mlog_project && python manage.py migrate && uwsgi --socket :8001 --module mlog_project.wsgi --py-autoreload 1"
        expose:
            - 8001
        depends_on: 
            - db
            - redis
            - celery