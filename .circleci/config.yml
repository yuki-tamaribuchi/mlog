version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@7.2.0 
  aws-s3: circleci/aws-s3@3.0.0

workflows:
  run-test-build-push:
    jobs:
      - build
      - aws-ecr/build-and-push-image:
          requires:
            - build
          filters:
            branches:
              only:
                - master
          dockerfile: docker/python/Dockerfile.production
          repo: "${AWS_RESOURCE_NAME_PREFIX_PYTHON}"
      - aws-ecr/build-and-push-image:
          requires:
            - build
          filters:
            branches:
              only:
                - master
          dockerfile: docker/nginx/Dockerfile.production
          repo: "${AWS_RESOURCE_NAME_PREFIX_NGINX}"
      - aws-s3/copy:
          aws-access-key-id: AWS_S3_ACCESS_KEY_ID
          aws-secret-access-key: AWS_S3_SECRET_ACCESS_KEY
          arguments: '--dryrun'
          from: aws_cfn.yml
          to: s3://mlog.cfn.template/


jobs:
  build:
    docker:
      - image: uktmbc/mlog_test:latest
    environment:
      MLOG_DATABASE: test
    steps:
      - run: set -x #Output all executed commands
      - checkout
      - restore_cache:
          key: v1-{{ .Branch }}-{{ checksum "mlog_project/requirements.txt" }}
      - run:
          name: Install requirements
          command: |
              pip install -r mlog_project/requirements.txt
      - save_cache:
          key: v1-{{ .Branch }}-{{ checksum "mlog_project/requirements.txt" }}
          paths:
            - "pip_deps"
      - run:
          name: Run test
          command: |
            redis-server &
            cd mlog_project
            coverage run --source='.' manage.py test
            python -m coveralls
      